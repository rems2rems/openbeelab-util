// Generated by CoffeeScript 1.9.2
(function() {
  var utils,
    hasProp = {}.hasOwnProperty;

  utils = {
    isIn: function(collection) {
      if (this instanceof Number || this instanceof String || this instanceof Boolean) {
        return collection.contains(this.valueOf()) || collection.contains(this);
      }
      return collection.contains(this);
    },
    clone: function() {
      var attr, copy, elem, i, j, len;
      if (this instanceof Number || this instanceof String || this instanceof Boolean) {
        return this.valueOf();
      }
      if (this instanceof Date) {
        copy = new Date();
        copy.setTime(this.getTime());
        return copy;
      }
      if (this instanceof Array) {
        copy = [];
        for (i = j = 0, len = this.length; j < len; i = ++j) {
          elem = this[i];
          if (this[i] == null) {
            copy[i] = this[i];
          } else {
            copy[i] = this[i].clone();
          }
        }
        return copy;
      }
      if (this instanceof Object) {
        copy = {};
        for (attr in this) {
          if (!hasProp.call(this, attr)) continue;
          if (this[attr] == null) {
            copy[attr] = this[attr];
          } else {
            copy[attr] = this[attr].clone();
          }
        }
        return copy;
      }
      throw new Error("Unable to copy obj! Its type isn't supported.");
    }
  };

  utils.install = function() {
    var method, methodName, results;
    results = [];
    for (methodName in utils) {
      if (!hasProp.call(utils, methodName)) continue;
      method = utils[methodName];
      if ((Object.prototype[methodName] == null) && methodName !== "install") {
        results.push(Object.prototype[methodName] = method);
      } else {
        results.push(void 0);
      }
    }
    return results;
  };

  module.exports = utils;

}).call(this);
